def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var61 = var5(arg1, arg2)
    var62 = (890 | arg2 + arg1) - var61
    var63 = 346 ^ -152
    var64 = (var62 + var63 - var61 ^ var62 + var61 ^ -2079217369) ^ arg1 | var62 & var61 - arg2 + arg1 + arg2
    var65 = (1334340707 ^ var64) ^ (846 | var62) + ((((-702332261 + -1662038600) ^ 336) + -1022755781) + -603)
    result = arg1 & arg1 + ((266 | -2013576151) & (var63 | arg2 ^ -609 + 124 - -726 + arg1 & var62) | var65)
    return result
def func4(arg6, arg7):
    var38 = var10(arg6, arg7)
    var48 = var41(arg6, arg7)
    var54 = func11(arg6, var48)
    var55 = func14()
    var56 = ((arg6 + arg7 + ((var48 - arg6) ^ arg6 | (var38 - (arg6 & var38)))) - var54) & -1920546873 | 192
    var57 = 85 - (arg6 & 1533269449)
    if var38 < var55:
        var58 = (var56 & -1191106789 ^ arg7 | 2097765788 + arg6 & arg6) + var55
    else:
        var58 = var54 | arg6 & var48 | ((var55 ^ var54) + var56) - (arg6 & 823) + var55
    var59 = ((arg7 - var38) + var54 + ((var54 | ((-978 ^ var56) - (534294727 + -1391891739 ^ var38 ^ -688 ^ var56 + arg6 & ((var57 ^ arg6) ^ var57)) - var54)) ^ var55)) + var54 - var56
    var60 = ((var38 + arg7 & ((arg7 ^ ((var38 + arg7) - var48) | var56) + var57 - (var56 & (var57 + var56 ^ ((var57 | (var55 - (650 & var48))) + 383018501)) - var55 & var38 + var48) + arg6)) & arg7) & var59
    result = -50523618 - -241 ^ (var59 - -871)
    return result
def func14():
    func12()
    result = len(range(40))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 1
def func11(arg49, arg50):
    var51 = 293 & arg49
    var52 = (var51 | var51) | -930 + (1065636038 & ((1823493365 - (((arg49 - (-732 & var51) - arg49) - arg49) - (-150 ^ ((arg50 ^ 266) & -949) & arg49 - arg49 | arg50) + arg50 - arg49)) & var51 | var51 ^ arg49))
    var53 = var51 | var52
    result = arg50 ^ -1133369852
    return result
def func10(arg42, arg43):
    var44 = (823 | (arg42 - 468 - arg42 - arg43 ^ 472) + arg42) + (46 | (arg43 ^ ((arg42 | arg42) & ((1429075056 ^ 166) ^ 532) | arg43 + -433 + 226) ^ arg42) & arg43 ^ -425 ^ 1949894340) - arg43
    var45 = arg43 + ((arg43 & (((var44 - var44) + -130 ^ (((arg43 ^ 896) - arg43) + 415) & (arg42 | -589)) + 218)) + (arg43 + var44))
    var46 = (-566 - (arg43 & (var45 ^ var44)) ^ -626 & arg42) & (var45 & (var45 ^ (65564117 ^ var45)))
    var47 = var46 | (696 ^ var46 + var44 & ((arg42 - arg42) & arg42 - (var45 + 677093057)) & ((296488620 & arg42) | ((var45 - (((arg42 - arg43) ^ arg43 + var44 & arg42 | var45) + var44)) ^ arg42)) ^ -761) - arg42
    result = ((var46 & var46) | (-759611166 ^ var46)) & (593 - -1486782711) - -669 ^ arg43
    return result
def func9():
    closure = [4]
    def func8(arg39, arg40):
        closure[0] += func10(arg39, arg40)
        return closure[0]
    func = func8
    return func
var41 = func9()
def func7(arg11, arg12):
    var13 = ((598 + -540) + -542630955) + arg12
    var14 = (328 - -1840439287) | var13
    var15 = -918 - -782 | 663
    var16 = (var14 ^ 1438490317 & arg12) ^ arg11
    var17 = 79 ^ (var13 - (1540123426 ^ arg11))
    var18 = var16 ^ arg11 & var16
    var19 = arg12 ^ (var18 - var15 + var13)
    var20 = 459 & (var15 + var14 - -820459861)
    var21 = (var18 & var18) - 941345725 & var15
    var22 = var13 ^ -450 + var14 + var20
    var23 = var18 + var18 ^ var21
    var24 = var21 - var21 - var18 | var16
    var25 = var20 ^ var18
    var26 = (var16 + (arg11 & var14)) ^ var24
    var27 = ((var15 + var21) | var23) + var16
    var28 = var21 | arg12 & var26 | var24
    if var19 < var23:
        var29 = var21 ^ arg12 + var13 ^ arg11
    else:
        var29 = var14 - (var22 + var27)
    var30 = (var19 + arg12) ^ var16 & var20
    if var30 < var22:
        var31 = var18 & var25
    else:
        var31 = ((var30 + var27) & var20) | var15
    var32 = (var22 - -551) | var20 | var23
    var33 = var21 | var14 | var20
    var34 = var28 ^ -56517075 | var23
    var35 = (var33 & arg11 & var33) ^ var27
    var36 = (var23 - var32 + -435) & var33
    var37 = (var16 & (var18 ^ var25)) - 750
    result = arg12 & var18
    return result
def func6():
    closure = [-9]
    def func5(arg8, arg9):
        closure[0] += func7(arg8, arg9)
        return closure[0]
    func = func5
    return func
var10 = func6()
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
